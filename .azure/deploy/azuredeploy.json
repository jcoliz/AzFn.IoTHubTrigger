{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "iotHubName": {
        "type": "string",
        "minLength": 3,
        "defaultValue": "[concat('iothub-', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the IoT Hub."
        }
      },
      "cgName": {
        "type": "string",
        "defaultValue": "cg-azfn",
        "metadata": {
          "description": "Short name of the consumer group."
        }
      },
      "dpsName": {
        "type": "string",
        "defaultValue": "[concat('dps-', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the provisioning service."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "skuName": {
        "type": "string",
        "defaultValue": "S1",
        "metadata": {
          "description": "IotHub SKU."
        }
      },
      "capacityUnits": {
        "type": "int",
        "minValue": 1,
        "maxValue": 1,
        "defaultValue": 1,
        "metadata": {
          "description": "Number of provisioned IoT Hub units. Restricted to 1 unit for the F1 SKU. Can be set up to maximum number allowed for subscription."
        }
      },
      "skuNameDps": {
        "type": "string",
        "defaultValue": "S1",
        "metadata": {
          "description": "Device Provisioning Service SKU."
        }
      },
      "fnName": {
        "type": "string",
        "defaultValue": "[uniqueString(resourceGroup().id)]",
        "metadata": {
          "description": "The name of the function app that you wish to create."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "fnRuntime": {
        "type": "string",
        "defaultValue": "dotnet",
        "allowedValues": [
          "node",
          "dotnet",
          "java"
        ],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      }
    },
    "variables": {
      "iotHubKey": "iothubowner",
      "consumerGroupFullName": "[concat(parameters('iotHubName'), '/events/', parameters('cgName'))]",
      "functionAppName": "[concat('fn-',parameters('fnName'))]",
      "hostingPlanName": "[concat('farm-',parameters('fnName'))]",
      "applicationInsightsName": "[concat('insight-',parameters('fnName'))]",
      "storageAccountName": "[concat('stor000',parameters('fnName'))]"
    },
    "resources": [
      {
        "type": "Microsoft.Devices/IotHubs",
        "apiVersion": "2021-03-31",
        "name": "[parameters('iotHubName')]",
        "location": "[parameters('location')]",
        "properties": {
          "eventHubEndpoints": {
            "events": {
              "retentionTimeInDays": 1,
              "partitionCount": 2
            }
          },
          "cloudToDevice": {
            "defaultTtlAsIso8601": "PT1H",
            "maxDeliveryCount": 10,
            "feedback": {
              "ttlAsIso8601": "PT1H",
              "lockDurationAsIso8601": "PT60S",
              "maxDeliveryCount": 10
            }
          },
          "messagingEndpoints": {
            "fileNotifications": {
              "ttlAsIso8601": "PT1H",
              "lockDurationAsIso8601": "PT1M",
              "maxDeliveryCount": 10
            }
          }
        },
        "sku": {
          "name": "[parameters('skuName')]",
          "capacity": "[parameters('capacityUnits')]"
        }
      },
      {
        "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
        "apiVersion": "2021-03-31",
        "name": "[variables('consumerGroupFullName')]",
        "properties": {
          "name": "[parameters('cgName')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]"
        ]
      },
      {
        "type": "Microsoft.Devices/provisioningServices",
        "apiVersion": "2022-02-05",
        "name": "[parameters('dpsName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('skuNameDps')]",
          "capacity": "[parameters('capacityUnits')]"
        },
        "properties": {
          "iotHubs": [
            {
              "connectionString": "[format('HostName={0};SharedAccessKeyName={1};SharedAccessKey={2}', reference(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '2021-07-02').hostName, variables('iotHubKey'), listkeys(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '2021-07-02').value[0].primaryKey)]",
              "location": "[parameters('location')]"
            }
          ]
        },
        "dependsOn": [
          "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]"
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-08-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        },
        "kind": "Storage"
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2021-03-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Y1",
          "tier": "Dynamic"
        },
        "properties": {}
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2021-03-01",
        "name": "[variables('functionAppName')]",
        "location": "[parameters('location')]",
        "kind": "functionapp",
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "siteConfig": {
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-08-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(variables('functionAppName'))]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~4"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "[parameters('fnRuntime')]"
              },
              {
                "name": "EVENTCSTR",
                "value": "[concat('Endpoint=', reference(resourceId('Microsoft.Devices/IoTHubs', parameters('iotHubName')), '2021-07-02').eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '2021-07-02').value[0].primaryKey, ';EntityPath=', reference(resourceId('Microsoft.Devices/IoTHubs', parameters('iotHubName')), '2021-07-02').eventHubEndpoints.events.path)]"
              },
              {
                "name": "EVENTPATH",
                "value": "[reference(resourceId('Microsoft.Devices/IoTHubs', parameters('iotHubName')), '2021-07-02').eventHubEndpoints.events.path]"
              },
              {
                "name": "HUBCG",
                "value": "[parameters('cgName')]"
              }
            ],
            "ftpsState": "FtpsOnly",
            "minTlsVersion": "1.2"
          },
          "httpsOnly": true
        },
        "dependsOn": [
          "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName'))]"
        ]
      },
      {
        "type": "Microsoft.Insights/components",
        "apiVersion": "2020-02-02",
        "name": "[variables('applicationInsightsName')]",
        "location": "[parameters('location')]",
        "kind": "web",
        "properties": {
          "Application_Type": "web",
          "Request_Source": "rest"
        }
      }
    ],
    "outputs": {
      "$env:HUBNAME": {
        "type": "string",
        "value": "[parameters('iotHubName')]"
      },
      "$env:HUBCSTR": {
        "type": "string",
        "value": "[format('HostName={0};SharedAccessKeyName={1};SharedAccessKey={2}', reference(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '2021-07-02').hostName, variables('iotHubKey'), listkeys(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '2021-07-02').value[0].primaryKey)]"
      },
      "$env:EVENTCSTR": {
        "type": "string",
        "value": "[concat('Endpoint=', reference(resourceId('Microsoft.Devices/IoTHubs', parameters('iotHubName')), '2021-07-02').eventHubEndpoints.events.endpoint, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', parameters('iotHubName')), '2021-07-02').value[0].primaryKey, ';EntityPath=', reference(resourceId('Microsoft.Devices/IoTHubs', parameters('iotHubName')), '2021-07-02').eventHubEndpoints.events.path)]"
      },
      "$env:EVENTPATH": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Devices/IoTHubs', parameters('iotHubName')), '2021-07-02').eventHubEndpoints.events.path]"
      },
      "$env:DPSNAME": {
        "type": "string",
        "value": "[parameters('dpsName')]"
      },
      "$env:IDSCOPE": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Devices/provisioningServices', parameters('dpsName'))).idScope]"
      },
      "$env:FNNAME": {
        "type": "string",
        "value": "[variables('functionAppName')]"
      },
      "$env:STORNAME": {
        "type": "string",
        "value": "[variables('storageAccountName')]"
      }
    }
  }